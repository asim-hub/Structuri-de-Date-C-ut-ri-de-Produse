ASIMIONESEI DANIEL 311CD
Tema2-Căutări de Produse
Pentru prima parte a temei am implementat urmatoarele functii:
1)createTree:creez un arbore cu pointeri la functiile date si il returnez;
2)isEmpty:verific daca arborele este neinitializat;
3)search:caut un element trimis ca parametru in arbore, iar daca exista 
il returnez , iara daca nu , returnez NULL;
4)minimum:returnez nodul cel mai din stanga al arborelui care este cel mai mic;
5)maximum:returnez nodul cel mai din dreapta al arborelui, care este cel mai mare;
6)succesore:returnez succesorul unui nod trimis ca parametru, iar succesorul poate fi:
elementul minim din subarborele drept al nodului, dacă nodul are subarbore drept sau
dacă nodul nu are subarbore drept, el va fi element maxim într-un subarbor,părintele 
rădăcinii acestui subarbore este nodul succesor;
7)predecesor:returnez predecesorul unui nod trimis ca parametru:elementul maxim
din subarborele stâng al nodului, dacă nodul are subarbore stâng sau dacă nodul
nu are subarbore stâng, el va fi element minim într-un subarbore ,iar părintele
rădăcinii acestui subarbore este nodul succesor;
8)updateHeight:actualizez inaltimea unui nod , prin adunarea lui 1 la inaltimea 
maxima a celor doi copii;
9)max:returnez valoarea maxima;
10)refreshHeights:recalculez inaltimea tuturor nodurilor aflate pe calea de la root
catre nodul trimis ca parametru de jos in sus;
11)height:returneaza inaltimea nodului;
12)avlRotateLeft:rotesc subarborele care are ca radacina pe x la stanga;
13)avlRoateRight:rotesc subarborele care are ca radacina pe x la dreapta;
14)avlGetBalance:returneaza diferenta de inaltime dintre copii unui nod;
15)avlFixUp:reechilibreaza arborele asupracaruia sau facut inserari sau stergeri;
16)parcurgerelista:parcurg lista de duplicate pana la ultimul nod;
17)addList:adaug un nou nod la lista de duplicate(daca exista mai mult de
doua noduri,adica end nu coincide cu primul nod ) , iar daca aceasta lista nu
exista(exista doar un nod, ala din arbore) , o creez prin adaugarea celui de 
al doilea nod;
18)insert:cara adauga un nou nod in arbore,si in lista corespunzatore
Pentru aceasta functie am implementat:createTreeNode,refreshHeights,avlFixUp
,addList;
19)delete:sterge un nod din arbore sau din lista daca este duplicat si restabileste 
conexiunea dintre noduri , iar apoi distrugen nodul, recalculam inaltimea arborelui
 si il rebalansam;
20)destroyTree:distruge fiecare nod din arbore si lista , iar pentru asta folosesc o
 functie recursiva numita Destroy;

